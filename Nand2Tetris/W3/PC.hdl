// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Inc16(in=recurse, out=incremented);
    // Mixing
    Mux16(a=recurse, b=incremented, sel=inc, out=aMux);
    Mux16(a=aMux, b=in, sel=load, out=bMux);
    Mux16(a=bMux, b=false, sel=reset, out=cMux);
    // Saving
    Register(in=cMux, load=true, out=out, out=recurse);
    
}


// Add16(a=plus, b[0]=true, b[1..15]=false, out=added);
//  Or();
//  Mux4Way16(a=false, b=in, c=added, d=plus, sel[0]=reset, sel[1]=inc, out=left);
//  Register(in=left, out=out, out=plus load=load);